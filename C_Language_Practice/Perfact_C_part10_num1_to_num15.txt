1. 인치를 센티미터로 바꾸는 함수를 작성하여, 표준입력으로 입력받은 인치를 센티미터로 출력하는 프로그램. 
#include<stdio.h> 
float plus(float sec) 
{ 
   float inch; 
   inch = sec*2.54; 
   return inch; 
} 
int main() 
{ 
   float cm, acc; 
   printf("몇센치를 인치로? : "); 
   scanf("%f", &cm); 
   acc = plus(cm); 
   printf("%.3f\n", acc); 
} 






2. 두 개의 임의 정수 m,n을 입력받아. int pow(int m, int n)을 작성하여 mn의 결과를 출력하는 프로그램 
#include<stdio.h> 
#include<math.h> 
int mm; 
int power(int m, int n) 
{ 
   mm = pow(m, n); 
} 
int main() 
{ 
   int a, b, sum; 
   printf("정수 두개를 입력 : "); 
   scanf("%d %d", &a, &b); 
   sum = pow(a, b); 
   printf("mm=%d\n", sum); 
} 






3. 섭씨온도가 0부터 100까지 0.5씩 증가하며 이때의 화씨온도를 소숫점자리 2자리까지 출력하는 섭씨온도를 화씨온도로 변환하는 프로그램. 
#include<stdio.h> 
float out(float cup) 
{ 
   float hwa; 
   hwa = (cup*(5.0 / 9.0)) + 32; 
   return hwa; 
} 
int main() 
{ 
   float ppap, outro = 0; 
   int ctt = 0; 
   for (ppap = 0; ppap <= 100; ppap += 0.5) 
   { 
      outro = out(ppap); 
      printf(" %.2f ",outro); 
      ctt++; 
      if (ctt == 14) 
      { 
         printf("\n\n"); 
         ctt = 0; 
      } 
   } 
} 





4. 세 개의 임의 정수를 입력받아 가장 큰 수를 출력하는 프로그램의 함수를 구현하여 그 결과를 알아보는 프로그램을 작성하시오. 
#include<stdio.h> 
int big[2]; 
int a(int i) 
{ 
   int amm = 0, l = 0; 
   for (i = 0; i <= 2; i++) 
   { 
      if (big[i] >= big[l]) 
      { 
         amm = big[i]; 
      } 
   } 
   return amm; 
} 
int main() 
{ 
   int out; 
   int i = 0; 
   for (i = 0; i <= 2; i++) 
   { 
      printf("입력 : "); 
      scanf("%d", &big[i]); 
   } 
   out=a(1); 
   printf("가장 큰 수 = %d\n", out); 
} 






5. cube()구현 시 square()를 함수호출로 사용하여 실수 r을 입력받아 이 값을 반지름으로 하는 원의 면적과 둘레의 길이를 구하는 프로그램 
#include<stdio.h> 
#include<math.h> 
int a = 0; 
int cube(int set) 
{ 
   int sje, ou = 0; 
   sje = square(a); 
   ou = sje*a; 
   return ou; 
} 
int square(int dul) 
{ 
   int jeg; 
   jeg = pow(dul, 2); 
   return jeg; 
} 
int main() 
{ 
   int out2, out3; 
   printf("in : "); 
   scanf("%d", &a); 
   out2 = square(a); 
   out3 = cube(a); 
   printf("두 제곱 = %d\n세 제곱 = %d\n", out2, out3); 
} 





6. 면적을 구하는 함수의 이름을 area()로, 원의 둘레를 구하는 함수를 circumference()로 하고 원주율은 3.14로 매크로로 정의하고 실수 r을 입력받아, 이 값을 반지름으로 하는 원의 면적과 둘레의 길이를 구하는 프로그램 
#include<stdio.h> 
#define PI 3.14 
float r = 0; 
float area(float ban)//면적 
{ 
   ban = PI*(r*r); 
   return ban; 
} 
float circumference(float ban)//둘레 
{ 
   ban = (2 * PI)*r; 
   return ban; 
} 
int main() 
{ 
   float mout, dout; 
   printf("반지름을 입력하시오 : "); 
   scanf("%f", &r); 
   mout = area(r); 
   dout = circumference(r); 
   printf("면적 = %.3f\n둘레 = %.3f\n", mout, dout); 
} 





7. 이자 계산 방식을 참고로 각각에 해당하는 함수를 만들어, 표준입력으로 원금, 이자율, 기간을 입력하면 총액이 출력되는 프로그램을 작성 
#include<stdio.h> 
int won = 0, year = 0; 
float iza = 0; 
int bok(int in,float iza, int year) 
{ 
   int bori = 0; 
   bori = in*(1 + (iza*year)); 
   return bori; 
} 
int dan(int in, float iza, int year) 
{ 
   int dari = 0; 
   dari = (in*(1 + iza))*year; 
   return dari; 
} 
int main() 
{ 
   int out1 = 0, out2 = 0; 
   printf("[원금 이율 년] 순으로 입력하세요 \n : "); 
   scanf("%d %f %d", &won, &iza, &year); 
   out1 = bok(won, iza, year); 
   out2 = dan(won, iza, year); 
   printf("단리 = %d\n복리 = %d\n", out1, out2); 
} 





8. 난수 알아맞히기 문제를 사용자가 맞힐 기회를 7번만 주고 7번의 기회에도 맞추지 못하면 
“모든 기회를 쓰셨습니다“를 출력하는 프로그램 
#include<stdio.h> 
#include<stdlib.h> 
#include<time.h> 
#define max 100 
int main() 
{ 
   int gue, n = 1, ip = 0; 
   srand((long)time(NULL)); 
   gue = rand() % max + 1; 
   while (n != 8) 
   { 
      printf("\n입력하세요 : "); 
      scanf("%d", &ip); 
      n++; 
      if (gue == ip) 
      { 
         printf("\n정답입니다!!!\n"); 
         break; 
      } 
      else if (gue > ip) 
      { 
         printf("\n더 큰 숫자 입니다\n"); 
      } 
      else if (gue < ip) 
      { 
         printf("\n더 작은 숫자 입니다\n"); 
      } 
   } 
   printf("\n모든 기회를 쓰셨습니다\n"); 
} 






9. 1부터 n까지의 합을 구하는 함수를 재귀함수로 작성하여 20을 실인자로 구현한 재귀함수를 한번 호출하여 1부터 20까지의 각각의 합이 출력되도록 프로그램 작성. 
#include<stdio.h> 
int sum = 0; 
int zaegui(int n) 
{ 
   if (n == 0) 
   return 0; 
   return n+zaegui(n-1); 
} 
int main() 
{ 
   int hap = 0; 
   hap=zaegui(20); 
   printf("%d\n", hap); 
} 





10. 피보나츠 수를 구하는 함수를 재귀함수로 작성하여 처음부터 10번째의 피보나츠 수에 대하여 각각의 함수를 출력하는 프로그램 
#include<stdio.h> 
int pibo(int n) 
{ 
   if (n == 1) 
   return 1; 
   else if (n == 0) 
   return 0; 
   return pibo(n - 1) + pibo(n - 2); 
} 
int main() 
{ 
   int sum = 0, i = 1; 
   sum = pibo(i); 
   for (; i <= sum;) 
   { 
      sum = pibo(i); 
      printf("F%d = %d\n", i, sum); 
      if (i <= 10) 
      { 
         i++; 
         sum = 10; 
      } 
   } 
} 




11. x의 y승을 구하는 함수를 재귀적으로 만들고, 6의 0승에서 10승까지 출력하는 프로그램을 작성하시오. 
#include<stdio.h> 
int zeg(int x, int y) 
{ 
   int hap = 0; 
   if (x == 0) 
   return 0; 
   if (x == 1 || y == 0) 
   return 1; 
   return x*zeg(x, y - 1); 
} 
int main() 
{ 
   int xx = 6, yy = 0; 
   int sum = 0; 
   for (; yy <= 10; yy++) 
   { 
      sum = zeg(xx, yy); 
      printf("%d\n", sum); 
   } 
} 



12. 재귀함수를 이용하여 입력받은 정수를 16진수로 출력하는 프로그램 
#include<stdio.h> 
int illyuk(int n) 
{ 
   int sum = 0; 
   if (n > 0) 
   { 
      sum = n % 16; 
      n = n / 16; 
      illyuk(n); 
      printf("%X", sum); 
   } 
} 
int main() 
{ 
   int num = 0; 
   printf("16진수를 보고 싶은 정수 : "); 
   scanf("%d", &num); 
   illyuk(num); 
   printf("\n"); 
} 



13. 1에서 45까지의 수에서 6개의 난수를 만들어 중복되지 않도록 출력 
#include<stdio.h> 
#include<stdlib.h> 
int main() 
{ 
   int one, n = 0, i = 0; 
   int gang[6] = { 0 }; 
   srand((long)time(NULL)); 
   for (n = 0; n < 6; n++) 
   { 
      one = rand() % 45 + 1; 
      gang[n] = one; 
   } 
   for (n = 0; n < 6; n++) 
   { 
      for (i = 0; i < 6; i++) 
      { 
         if (i != n) 
         { 
            if (gang[n] == gang[i]) 
            { 
               one = rand() % 45 + 1; 
               gang[n] = one; 
            } 
         } 
      } 
   } 
   for (n = 0; n < 6; n++) 
   { 
      printf("%4d", gang[n]); 
   } 
   printf("\n"); 
} 



14. 일차원 배열을 복사하는 함수를 작성하여 결과 출력 
#include<stdio.h> 
void company(int from[], int to[], int n) 
{ 
   int i = 0; 
   for (i = 0; i < n; i++) 
   { 
      to[i] = from[i]; 
      printf("%4d", to[i]); 
   } 
   printf("\n"); 
} 
int main() 
{ 
   int data1[10] = { 0 }; 
   int data2[10] = { 0 }; 
   int num = 0; 
   int i = 0; 
   printf("배열을 몇개 입력하고 싶어요? : "); 
   scanf("%d", &num); 
   for (i = 0; i < num; i++) 
   { 
      printf("입력 : "); 
      scanf("%d", &data1[i]); 
   } 
   company(data1, data2, num); 
   for (i = 0; i < num; i++) 
   { 
      printf("%4d", data2[i]); 
   } 
   printf("\n"); 
}  





15. 일차원 배열의 동등함을 검사하는 함수를 작성하여 결과를 알아보는 프로그램 
#include<stdio.h> 
int isequalarray(int a[], int b[], int n) 
{ 
   int i = 0, m = 0; 
   if ((sizeof(a) / sizeof(a[0]) == (sizeof(b) / sizeof(b[0])))) 
   { 
      for (i = 0; i < n; i++) 
      { 
         if (a[i] == b[i]) 
         m++; 
      } 
   } 
   if (m == n) 
   printf("1\n"); 
   else 
   printf("0\n"); 
} 
int main() 
{ 
   int data1[30] = { 0 }; 
   int data2[30] = { 0 }; 
   int num = 0; 
   int i = 0; 
   printf("배열을 몇번 입력할건가요? : "); 
   scanf("%d", &num); 
   for (i = 0; i < num; i++) 
   { 
      printf("첫번째 배열 원소 입력 : "); 
      scanf("%d", &data1[i]); 
   } 
   for (i = 0; i < num; i++) 
   { 
      printf("두번째 배열 원소 입력 : "); 
      scanf("%d", &data2[i]); 
   } 
   isequalarray(data1, data2, num); 
} 
